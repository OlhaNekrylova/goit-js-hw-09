{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACXC,KAAOC,SAASC,cAAc,SAC9BC,WAAaF,SAASC,cAAc,uBACpCE,UAAYH,SAASC,cAAc,sBACnCG,YAAcJ,SAASC,cAAc,yBAQvC,SAASI,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAG5BA,EAAM,G,CAIb,SAASQ,EAAaC,GACpBA,EAAIC,iBACJ,IAAIC,EAAQC,SAASrB,EAAKI,WAAWkB,OACrC,MAAMC,EAAOF,SAASrB,EAAKK,UAAUiB,OAC/BE,EAASH,SAASrB,EAAKM,YAAYgB,OAEzC,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAASC,GAAW,EAErDlB,EAAckB,EAAUL,GACvBM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBX,EAAA6B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAEhEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBX,EAAA6B,OAAOG,QAAQ,sBAAoBtB,QAAeC,MAAU,IAG9DW,GAASG,C,CArCbvB,EAAKC,KAAK8B,iBAAiB,SAAUd,GACrCjB,EAAKI,WAAW2B,iBAAiB,SAAUd,GAC3CjB,EAAKK,UAAU0B,iBAAiB,SAAUd,GAC1CjB,EAAKM,YAAYyB,iBAAiB,SAAUd","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport '../css/common.css';\n\nconst refs = {\n  form : document.querySelector('.form'),\n  inputDelay : document.querySelector('input[name=\"delay\"]'),\n  inputStep : document.querySelector('input[name=\"step\"]'), \n  inputAmount : document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.inputDelay.addEventListener('submit', onFormSubmit);\nrefs.inputStep.addEventListener('submit', onFormSubmit);\nrefs.inputAmount.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  \n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n      \n    }, delay);\n  });\n};\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  let delay = parseInt(refs.inputDelay.value);\n  const step = parseInt(refs.inputStep.value);\n  const amount = parseInt(refs.inputAmount.value);\n  \n  for (let position = 1; position <= amount;  position +=1) {\n    \n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    \n    delay += step;\n  }\n};\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","inputDelay","inputStep","inputAmount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$onFormSubmit","evt","preventDefault","delay1","parseInt","value","step","amount","position1","then","Notify","success","catch","failure","addEventListener"],"version":3,"file":"03-promises.1a5326c5.js.map"}