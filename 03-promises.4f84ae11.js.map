{"mappings":"AAEA,MAAMA,EAAO,CACXC,KAAOC,SAASC,cAAc,SAC9BC,WAAaF,SAASC,cAAc,uBACpCE,UAAYH,SAASC,cAAc,sBACnCG,YAAcJ,SAASC,cAAc,yBAGvCH,EAAKC,KAAKM,iBAAiB,SAAUC,GACrCR,EAAKI,WAAWG,iBAAiB,SAAUC,GAC3CR,EAAKK,UAAUE,iBAAiB,SAAUC,GAC1CR,EAAKM,YAAYC,iBAAiB,SAAUC,GAE5C,MAAMC,EAAQT,EAAKI,WAAWM,MACxBC,EAAOX,EAAKK,UAAUK,MACtBE,EAASZ,EAAKM,YAAYI,MAChC,IAAIG,EAAW,EACXC,EAAU,EAwBd,SAASN,EAAaO,GArBtB,IAAuBC,EAAUC,EAsB/BF,EAAIG,iBAEJJ,EAAUF,GAxBWI,EA6BLH,EA7BeI,EA6BLR,EA3BnB,IAAIU,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEpBC,YAAW,KAMvBH,EACFF,EAAQ,CAAEM,SAAAV,EAAUW,MAAAV,IAEpBI,EAAO,CAAEK,SAAAV,EAAUW,MAAAV,GAAQ,GAG5BA,EAAM,KAaRW,MAAK,EAAGF,SAAAG,EAAUF,MAAAG,MACjBC,QAAQC,IAAI,uBAAqBH,QAAiBC,MAAU,IAE7DG,OAAM,EAAGP,SAAAQ,EAAUP,MAAAQ,MAClBJ,QAAQC,IAAI,sBAAoBE,QAAeC,MAAU,IAG3DtB,GAAY,EACZJ,GAASE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import '../css/common.css';\n\nconst refs = {\n  form : document.querySelector('.form'),\n  inputDelay : document.querySelector('input[name=\"delay\"]'),\n  inputStep : document.querySelector('input[name=\"step\"]'), \n  inputAmount : document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.inputDelay.addEventListener('submit', onFormSubmit);\nrefs.inputStep.addEventListener('submit', onFormSubmit);\nrefs.inputAmount.addEventListener('submit', onFormSubmit);\n\nconst delay = refs.inputDelay.value;\nconst step = refs.inputStep.value;\nconst AMOUNT = refs.inputAmount.value;\nlet position = 0;\nlet counter = 0;\nlet timeoutId = null;\n\nfunction createPromise(position, delay) {\n  \n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n    const timeoutId = setTimeout(() => {\n      // if (counter === AMOUNT) {\n      //   clearInterval(intervalId);\n      //   return;\n      // }\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n      \n    }, delay);\n  });\n}\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  \n  counter = AMOUNT;\n  // if (counter === AMOUNT) {\n\n  // }\n\n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n    position += 1;\n    delay += step;\n  \n}\n\n\n"],"names":["$47d4ff9957288465$var$refs","form","document","querySelector","inputDelay","inputStep","inputAmount","addEventListener","$47d4ff9957288465$var$onFormSubmit","$47d4ff9957288465$var$delay","value","$47d4ff9957288465$var$step","$47d4ff9957288465$var$AMOUNT","$47d4ff9957288465$var$position","$47d4ff9957288465$var$counter","evt","position1","delay1","preventDefault","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","position2","delay2","console","log","catch","position3","delay3"],"version":3,"file":"03-promises.4f84ae11.js.map"}