{"mappings":"AAEA,MAAMA,EAAO,CACTC,SAAWC,SAASC,cAAc,sBAClCC,wBAA0BF,SAASC,cAAc,oBACjDE,eAAiBH,SAASC,cAAc,WAgC5C,MAAMG,EAAQ,IA7Bd,MAOIC,QACI,GAAIC,KAAKC,SACL,OAGJ,MAAMC,EAAWC,KAAKC,MACtBJ,KAAKK,WAAaC,aAAY,KAC1B,MAAMC,EAAcJ,KAAKC,OA8BrC,SAAmBI,GACf,MAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAENE,EAAOC,EAAeC,KAAKC,MAAMR,EAAKI,IACtCK,EAAQH,EAAeC,KAAKC,MAAMR,EAAMI,EAAOD,IAC/CO,EAAUJ,EAAeC,KAAKC,MAAMR,EAAOI,EAAOD,EAAQD,IAC1DS,EAAUL,EAAeC,KAAKC,MAAMR,EAAQI,EAAOD,EAAQD,EAAUD,G,CArCnEW,CADkBlB,EAAWK,GAE7BP,KAAKqB,OAAOb,GAAG,GAChB,I,CAGPc,OACQpB,WAAaK,cACbgB,cAAcvB,KAAKK,YACnBL,KAAKC,UAAW,E,CAvBxBuB,aAAYH,OAAEA,IACVrB,KAAKK,WAAa,KAClBL,KAAKC,UAAW,EAChBD,KAAKqB,OAASA,C,GAyBE,CAAEA,OAM1B,UAAyBR,KAAEA,EAAII,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,IAC7C3B,EAAKI,wBAAwB6B,YAAclB,YAC3Cf,EAAKK,eAAe4B,YAAc,GAAGZ,KAAQI,KAASC,KAAWC,G,IAGrE,SAASL,EAAeY,GACpB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CAVrCpC,EAAKC,SAASoC,iBAAiB,SAAS,KACpC/B,EAAMC,OAAO","sources":["src/js/02-timer.js"],"sourcesContent":["import '../css/common.css';\n\nconst refs = {\n    stardBtn : document.querySelector('button[data-start]'),\n    clockfaceDatetimePicker : document.querySelector('#datetime-picker'),\n    clockfaceTimer : document.querySelector('.timer'),\n};\n\nclass Timer{\n    constructor({ onTick }) {\n        this.intervalId = null;\n        this.isActive = false;\n        this.onTick = onTick;\n    }\n\n    start() {\n        if (this.isActive) {\n            return;\n        }\n    \n        const lastTime = Date.now();\n        this.intervalId = setInterval(() => {\n            const currentTime = Date.now();\n            const deltaTime = lastTime - currentTime;\n            convertMs(deltaTime);\n            this.onTick(ms);\n        }, 1000);\n    }\n\n    stop() {\n        if (lastTime === currentTime) {\n            clearInterval(this.intervalId);\n            this.isActive = false;\n        }\n    }\n};\n\nconst timer = new Timer({ onTick : updateClockface });\n\nrefs.stardBtn.addEventListener('clicK', () => {\n    timer.start();\n});\n\nfunction updateClockface({ days, hours, minutes, seconds }) {\n    refs.clockfaceDatetimePicker.textContent = currentTime;\n    refs.clockfaceTimer.textContent = `${days}:${hours}:${minutes}:${seconds}`;\n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = addLeadingZero(Math.floor(ms / day));\n    const hours = addLeadingZero(Math.floor((ms % day) / hour));\n    const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n    const seconds = addLeadingZero(Math.floor((((ms % day) % hour) % minute) / second));\n\n    return { days, hours, minutes, seconds };\n}"],"names":["$40d383fb392a7037$var$refs","stardBtn","document","querySelector","clockfaceDatetimePicker","clockfaceTimer","$40d383fb392a7037$var$timer","start","this","isActive","lastTime","Date","now","intervalId","setInterval","currentTime","ms","second","minute","hour","day","days","$40d383fb392a7037$var$addLeadingZero","Math","floor","hours","minutes","seconds","$40d383fb392a7037$var$convertMs","onTick","stop","clearInterval","constructor","textContent","value","String","padStart","addEventListener"],"version":3,"file":"02-timer.4260a1dc.js.map"}